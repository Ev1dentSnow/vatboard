{"version":3,"sources":["webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedLink.ts","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedNode.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/add.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/cover.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quad.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/x.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/y.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quadtree.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/data.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/extent.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/find.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/remove.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/root.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/size.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visit.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visitAfter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/constant.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/jiggle.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/collide.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/link.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-dispatch/src/dispatch.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-timer/src/timer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/simulation.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/x.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/y.js","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedSeries.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/manyBody.js","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedTree.ts","webpack:///./plugins/forceDirected.js"],"names":["ForceDirectedLink_ForceDirectedLink","_super","ForceDirectedLink","_this","call","this","className","interfaceColors","InterfaceColorSet","fillOpacity","strokeOpacity","stroke","getFor","isMeasured","nonScalingStroke","interactionsEnabled","distance","strength","applyTheme","tslib_es6","prototype","validate","source","target","path","Path","x","pixelX","y","pixelY","isHidden","isHiding","hide","show","Object","defineProperty","_source","value","_disposers","push","events","on","invalidate","_target","adapter","isEnabled","apply","properties","setPropertyValue","Sprite","Registry","registeredClasses","ForceDirectedNode_ForceDirectedNode","ForceDirectedNode","applyOnClones","togglable","draggable","setStateOnChildren","isActive","dataItem","component","nodeDragStarted","updateSimulation","outerCircle","createChild","Circle","shouldClone","strokeWidth","bgColor","fill","states","create","scale","outerActiveState","visible","circle","hiddenState","radius","addDisposer","updateLabelSize","label","Label","horizontalCenter","verticalCenter","textAlign","textValign","add","pixelRadius","text","dsRadius","defaultState","Type","width","height","copyFrom","setActive","children","childrenInited","initNode","updateNodeList","each","child","node","parentLink","dispatchVisibility","restartSimulation","Container","add_add","tree","d","isNaN","parent","xm","ym","xp","yp","right","bottom","i","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","length","_x","_y","next","Array","src_quad","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","pop","cover","n","xz","yz","Infinity","Math","floor","z","visit","extent","_","arguments","find","x2","y2","q","x3","y3","quads","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","constant","jiggle","random","collide_x","vx","collide_y","vy","link_index","index","link_find","nodeById","nodeId","get","Error","noop","dispatch","t","Dispatch","type","name","c","set","slice","concat","constructor","typename","T","typenames","types","trim","split","map","indexOf","hasOwnProperty","parseTypenames","that","args","taskHead","taskTail","src_dispatch","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","simulation_x","simulation_y","initialRadius","initialAngle","PI","src_simulation","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","Map","stepper","step","event","tick","iterations","k","forEach","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","delete","closest","d3_force_src_x","strengths","d3_force_src_y","ForceDirectedSeries_ForceDirectedSeriesDataItem","ForceDirectedSeriesDataItem","hasChildren","childLinks","List","duration","fields","_visible","event_1","dispatchImmediately","toValue","event_2","values","setValue","_node","component_1","node_1","Disposer","removeValue","addSprite","itemsFocusable","role","focusable","once","ev","readerTitle","populateString","itemReaderText","hoverable","level","color","console","log","colors","getIndex","setProperty","linkWith","hiddenInLegend","collapsed","createLegendMarker","marker","_legendDataItem","valueLabel","Series","ForceDirectedSeries_ForceDirectedSeries","ForceDirectedSeries","d3forceSimulation","maxRadius","Percent","minRadius","ColorSet","manyBodyStrength","centerStrength","updateRadiuses","dataItems","updateLinksAndNodes","innerWidth","innerHeight","getMaxValue","max","cmax","validateDataItems","_maxValue","_forceLinks","reset","min","utils_Math","dataFields","processLinkWith","chart","feedLegend","_linkForce","links","distances","count","bias","id","link","l","b","m","initializeStrength","initializeDistance","src_link","_collisionForce","radii","xi","yi","ri","ri2","prepare","quad","rj","r","collide","linkDatum","getDistance","getStrength","__disabled","disabled","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","manyBody","nodeDragEnded","updateRadius","minSide","Utils","getKey","nodeIndex","cursorOverStyle","Mouse","pointer","default","dataItemsInvalid","maxLevels","index_1","zIndex","childIndex","diColor","utils_Array","dataItemToConnect","getDataItemById","di","createDataItem","_nodes","createNode","_links","createLink","getPropertyValue","RoundedRectangle","cornerRadius","legendDataItem","colorOrig","property","ForceDirectedTree_ForceDirectedTreeDataItem","ForceDirectedTreeDataItem","SerialChart","ForceDirectedTree_ForceDirectedTree","ForceDirectedTree","seriesContainer","layout","createSeries","legend","legendData_1","series","legendSettings","labelText","labels","template","itemLabelText","valueText","valueLabels","itemValueText","applyInternalDefaults","language","translate","am4plugins_forceDirected","forceDirected_namespaceObject"],"mappings":"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","file":"./plugins/forceDirected.js","sourcesContent":["/**\r\n * ForceDirectedLink module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedLink]].\r\n */\r\nexport interface IForceDirectedLinkProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Distance between centers of source and target nodes.\r\n\t */\r\n\tdistance?: number;\r\n\r\n\t/**\r\n\t * Strength of the \"traction\" between source and target nodes.\r\n\t */\r\n\tstrength?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ForceDirectedLink]].\r\n */\r\nexport interface IForceDirectedLinkEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedLinkAdapters extends ISpriteAdapters, IForceDirectedLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class that builds links between [[ForceDirectedNode]] elements.\r\n *\r\n * @see {@link IForceDirectedLinkEvents} for a list of available events\r\n * @see {@link IForceDirectedLinkAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedLink extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedLinkEvents;\r\n\r\n\t/**\r\n\t * Link source node\r\n\t */\r\n\tprotected _source: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * Link parent node\r\n\t */\r\n\tprotected _target: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedLink\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.strokeOpacity = 0.5;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\tthis.distance = 1.5;\r\n\t\tthis.strength = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet source = this.source;\r\n\t\tlet target = this.target;\r\n\t\tif (source && target) {\r\n\t\t\tthis.path = $path.moveTo({ x: source.pixelX, y: source.pixelY }) + $path.lineTo({ x: target.pixelX, y: target.pixelY });\r\n\r\n\t\t\tif (source.isHidden || target.isHidden || source.isHiding || target.isHiding) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.show()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Source node - a node link starts from.\r\n\t * \r\n\t * @param  value  Source node\r\n\t */\r\n\tpublic set source(value: ForceDirectedNode) {\r\n\t\tif (value) {\r\n\t\t\tthis._source = value;\r\n\t\t\tthis._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Source node\r\n\t */\r\n\tpublic get source(): ForceDirectedNode {\r\n\t\treturn this._source;\r\n\t}\r\n\r\n\t/**\r\n\t * Target node - a node link ends at.\r\n\t * \r\n\t * @param  value  Target node\r\n\t */\r\n\tpublic set target(value: ForceDirectedNode) {\r\n\t\tif (value) {\r\n\t\t\tthis._target = value;\r\n\t\t\tthis._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target node\r\n\t */\r\n\tpublic get target(): ForceDirectedNode {\r\n\t\treturn this._target;\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between centers of source and target nodes.\r\n\t *\r\n\t * This is relative to the radii to sum of both source and target nodes.\r\n\t *\r\n\t * E.g. if this would be set to `1` both nodes would be touching each other.\r\n\t *\r\n\t * @default 1.5\r\n\t * @param  value  Distance\r\n\t */\r\n\tpublic set distance(value: number) {\r\n\t\tthis.setPropertyValue(\"distance\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance\r\n\t */\r\n\tpublic get distance(): number {\r\n\t\tif (this.adapter.isEnabled(\"distance\")) {\r\n\t\t\treturn this.adapter.apply(\"distance\", this.properties.distance);\r\n\t\t}\r\n\t\treturn this.properties.distance;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative \"strength\" of the traction between linked nodes.\r\n\t *\r\n\t * Available values: 0 to XX.\r\n\t *\r\n\t * The bigger the number, the more rigid the link and the less it will\r\n\t * stretch when node is dragged.\r\n\t *\r\n\t * Carefully with very big numbers: nodes and links might start behaving\r\n\t * quite \"nerviously\".\r\n\t *\r\n\t * @default 1\r\n\t * @param  value  Strength\r\n\t */\r\n\tpublic set strength(value: number) {\r\n\t\tthis.setPropertyValue(\"strength\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Strength\r\n\t */\r\n\tpublic get strength(): number {\r\n\t\tif (this.adapter.isEnabled(\"strength\")) {\r\n\t\t\treturn this.adapter.apply(\"strength\", this.properties.strength);\r\n\t\t}\r\n\t\treturn this.properties.strength;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedLink\"] = ForceDirectedLink;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedLink.ts","/**\r\n * Module that defines everything related to building ForceDirectedNodes.\r\n * \r\n * It is a container which has ForceDirectedNode element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { ForceDirectedSeriesDataItem } from \"./ForceDirectedSeries\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedNode]].\r\n */\r\nexport interface IForceDirectedNodeProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[ForceDirectedNode]].\r\n */\r\nexport interface IForceDirectedNodeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedNodeAdapters extends IContainerAdapters, IForceDirectedNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates [[ForceDirectedNode]] elements (circles).\r\n *\r\n * @see {@link IForceDirectedNodeEvents} for a list of available events\r\n * @see {@link IForceDirectedNodeAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedNode extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedNodeEvents;\r\n\r\n\t/**\r\n\t * A node's [[Circle]] element.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * A [[Circle]] element for node's outline. This outline is used on nodes\r\n\t * that have children.\r\n\t */\r\n\tpublic outerCircle: Circle;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedSeriesDataItem;\r\n\r\n\t/**\r\n\t * Node's [[Label]] element.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedNode\";\r\n\r\n\t\t//this.isMeasured = true; // for correct position of the tooltip\r\n\t\tthis.applyOnClones = true;\r\n\t\tthis.togglable = true;\r\n\t\tthis.draggable = true;\r\n\t\tthis.setStateOnChildren = true;\r\n\r\n\t\tthis.isActive = false;\r\n\r\n\t\tthis.events.on(\"dragstart\", () => {\r\n\t\t\tif (this.dataItem.component) {\r\n\t\t\t\tthis.dataItem.component.nodeDragStarted();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tthis.events.on(\"drag\", () => {\r\n\t\t\tthis.updateSimulation();\r\n\t\t}, this, false);\r\n\r\n\t\tlet outerCircle = this.createChild(Circle);\r\n\t\touterCircle.shouldClone = false;\r\n\t\touterCircle.strokeWidth = 2;\r\n\r\n\t\tlet bgColor = new InterfaceColorSet().getFor(\"background\");\r\n\t\touterCircle.fill = bgColor;\r\n\t\tthis.outerCircle = outerCircle;\r\n\r\n\t\tlet hoverState = outerCircle.states.create(\"hover\");\r\n\t\thoverState.properties.scale = 1.1;\r\n\r\n\t\tlet outerActiveState = outerCircle.states.create(\"active\");\r\n\t\touterActiveState.properties.scale = 1.1;\r\n\t\touterActiveState.properties.visible = true;\r\n\r\n\t\tlet activeHoverState = outerCircle.states.create(\"hoverActive\");\r\n\t\tactiveHoverState.properties.scale = 1;\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\r\n\t\tlet activeState = circle.states.create(\"active\");\r\n\t\tactiveState.properties.visible = true;\r\n\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.interactionsEnabled = false;\r\n\t\tcircle.hiddenState.properties.radius = 0.01;\r\n\t\tcircle.events.on(\"validated\", this.updateSimulation, this, false)\r\n\t\tcircle.hiddenState.properties.visible = true;\r\n\r\n\r\n\t\tthis.circle = circle;\r\n\r\n\t\tthis.addDisposer(outerCircle.events.on(\"validated\", this.updateLabelSize, this, false));\r\n\r\n\t\tthis._disposers.push(this.circle);\r\n\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.fill = bgColor;\r\n\t\tlabel.strokeOpacity = 0;\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.textAlign = \"middle\";\r\n\t\tlabel.textValign = \"middle\";\r\n\t\tthis.label = label;\r\n\r\n\t\tthis.adapter.add(\"tooltipY\", (y, target) => {\r\n\t\t\treturn -target.circle.pixelRadius;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateLabelSize() {\r\n\t\tif (this.label.text) {\r\n\t\t\tlet circle = this.circle;\r\n\t\t\tlet radius = circle.pixelRadius;\r\n\r\n\t\t\tlet ds = circle.defaultState;\r\n\t\t\tlet dsRadius = ds.properties.radius\r\n\t\t\tif ($type.isNumber(dsRadius)) {\r\n\t\t\t\tradius = dsRadius;\r\n\t\t\t}\r\n\r\n\t\t\tthis.label.width = 2 * radius;\r\n\t\t\tthis.label.height = 2 * radius;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[ForceDirectedNode]].\r\n\t *\r\n\t * @param source Source ForceDirectedNode\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.circle) {\r\n\t\t\tthis.circle.copyFrom(source.circle);\r\n\t\t}\r\n\t\tif (this.label) {\r\n\t\t\tthis.label.copyFrom(source.label);\r\n\t\t}\r\n\t\tif (this.outerCircle) {\r\n\t\t\tthis.outerCircle.copyFrom(source.outerCircle);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets node as \"active\" (expanded).\r\n\t * \r\n\t * @ignore\r\n\t * @param  value  Active or not?\r\n\t */\r\n\tpublic setActive(value: boolean) {\r\n\t\tsuper.setActive(value);\r\n\r\n\t\tlet dataItem = this.dataItem;\r\n\r\n\t\tif (dataItem) {\r\n\r\n\t\t\tlet children = dataItem.children;\r\n\r\n\t\t\tif (value && children && !dataItem.childrenInited) {\r\n\t\t\t\tdataItem.component.initNode(dataItem);\r\n\t\t\t\tdataItem.component.updateNodeList();\r\n\t\t\t}\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tif (children) {\r\n\t\t\t\t\tchildren.each((child) => {\r\n\t\t\t\t\t\tchild.node.show();\r\n\t\t\t\t\t\tchild.node.interactionsEnabled = true;\r\n\t\t\t\t\t\tif (child.parentLink) {\r\n\t\t\t\t\t\t\tchild.parentLink.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchild.node.isActive = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tdataItem.dispatchVisibility(true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (children) {\r\n\t\t\t\t\tchildren.each((child) => {\r\n\t\t\t\t\t\tif (child.parentLink) {\r\n\t\t\t\t\t\t\tchild.parentLink.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchild.node.isActive = false;\r\n\t\t\t\t\t\tchild.node.interactionsEnabled = false;\r\n\r\n\t\t\t\t\t\tchild.node.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tdataItem.dispatchVisibility(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateSimulation();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected updateSimulation() {\r\n\t\tlet dataItem = this.dataItem;\r\n\t\tif (dataItem && dataItem.component) {\r\n\t\t\tdataItem.component.restartSimulation();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedNode\"] = ForceDirectedNode;\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedNode.ts","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/add.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/cover.js\n// module id = null\n// module chunks = ","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quad.js\n// module id = null\n// module chunks = ","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/x.js\n// module id = null\n// module chunks = ","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/y.js\n// module id = null\n// module chunks = ","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quadtree.js\n// module id = null\n// module chunks = ","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/data.js\n// module id = null\n// module chunks = ","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/extent.js\n// module id = null\n// module chunks = ","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/find.js\n// module id = null\n// module chunks = ","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/remove.js\n// module id = null\n// module chunks = ","export default function() {\n  return this._root;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/root.js\n// module id = null\n// module chunks = ","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/size.js\n// module id = null\n// module chunks = ","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visit.js\n// module id = null\n// module chunks = ","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visitAfter.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/constant.js\n// module id = null\n// module chunks = ","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/jiggle.js\n// module id = null\n// module chunks = ","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/collide.js\n// module id = null\n// module chunks = ","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/link.js\n// module id = null\n// module chunks = ","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-dispatch/src/dispatch.js\n// module id = null\n// module chunks = ","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-timer/src/timer.js\n// module id = null\n// module chunks = ","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/simulation.js\n// module id = null\n// module chunks = ","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/x.js\n// module id = null\n// module chunks = ","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/y.js\n// module id = null\n// module chunks = ","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Series, SeriesDataItem, ISeriesDataFields, ISeriesProperties, ISeriesAdapters, ISeriesEvents } from \"../../charts/series/Series\";\r\nimport { ForceDirectedTree, ForceDirectedTreeDataItem } from \"./ForceDirectedTree\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ListTemplate, ListDisposer, List } from \"../../core/utils/List\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { ForceDirectedLink } from \"./ForceDirectedLink\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport * as d3force from \"d3-force\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { AMEvent } from \"../../core/utils/EventDispatcher\";\r\nimport { IDataItemEvents } from \"../../core/DataItem\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n * @since 4.3.8\r\n */\r\nexport class ForceDirectedSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * A reference to a component of a data item.\r\n\t */\r\n\tpublic component: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * A type of node used for this series.\r\n\t */\r\n\tpublic _node: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * A list of [[ForceDirectedLink]] elements of links  to node's children.\r\n\t *\r\n\t * This list does not include a link to node's parent, which is available\r\n\t * through `parentLink`.\r\n\t */\r\n\tpublic childLinks: List<ForceDirectedLink>;\r\n\r\n\t/**\r\n\t * A [[ForceDirectedLink]] to node's parent.\r\n\t */\r\n\tpublic parentLink: ForceDirectedLink;\r\n\r\n\t/**\r\n\t * A Legend's data item.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Have all children already been initialized?\r\n\t */\r\n\tpublic childrenInited: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedSeriesDataItem\";\r\n\r\n\t\tthis.hasChildren.children = true;\r\n\r\n\t\tthis.childLinks = new List<ForceDirectedLink>();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis._visible = true;\r\n\r\n\t\tif (this.node) {\r\n\t\t\tthis.node.isActive = true;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dispatchVisibility(visible: boolean) {\r\n\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tvisible: visible\r\n\t\t\t};\r\n\r\n\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis._visible = false;\r\n\r\n\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tvisible: false\r\n\t\t\t};\r\n\r\n\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t}\r\n\r\n\t\tif (this.node) {\r\n\t\t\tthis.node.isActive = false;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the item.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\r\n\t\tlet value = this.values.value.value;\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t\tthis.children.each((child) => {\r\n\t\t\t\t\tvalue += child.value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * An element, related to this data item. (node)\r\n\t *\r\n\t * @readonly\r\n\t * @return node element\r\n\t */\r\n\tpublic get node(): ForceDirectedNode {\r\n\t\tif (!this._node) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet node = component.nodes.create();\r\n\t\t\tnode.draggable = true;\r\n\t\t\tthis._node = node;\r\n\r\n\t\t\tthis._disposers.push(node);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tcomponent.nodes.removeValue(node);\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(node);\r\n\t\t\tnode.visible = this.visible;\r\n\t\t\tnode.hiddenState.properties.visible = true;\r\n\r\n\t\t\t// Apply accessibility\r\n\t\t\tif (component.itemsFocusable()) {\r\n\t\t\t\tnode.role = \"menuitem\";\r\n\t\t\t\tnode.focusable = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.role = \"listitem\";\r\n\t\t\t\tnode.focusable = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply screen reader label\r\n\t\t\tif (node.focusable) {\r\n\t\t\t\tnode.events.once(\"focus\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tnode.events.once(\"blur\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t\tif (node.hoverable) {\r\n\t\t\t\tnode.events.once(\"over\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tnode.events.once(\"out\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._node;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth level in the series hierarchy.\r\n\t *\r\n\t * The top-level item will have level set at 0. Its children will have\r\n\t * level 1, and so on.\r\n\t *\r\n\t * @readonly\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.parent.level + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Item's color.\r\n\t *\r\n\t * If not set, will use parent's color, or, if that is not set either,\r\n\t * automatically assigned color from chart's color set. (`chart.colors`)\r\n\t *\r\n\t * @param value  : Color | LinearGradient | RadialGradient | Pattern\r\n\t */\r\n\tpublic set color(value: Color | LinearGradient | RadialGradient | Pattern) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color | LinearGradient | RadialGradient | Pattern {\r\n\t\tlet color = this.properties.color;\r\n\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tconsole.log(\"parent\")\r\n\t\t\t\tcolor = this.parent.color;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tcolor = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of id's of other nodes outside of the child/parent tree to link\r\n\t * with.\r\n\t * \r\n\t * @param  value  Link list\r\n\t */\r\n\tpublic set linkWith(value: string[]) {\r\n\t\tthis.setProperty(\"linkWith\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Link list\r\n\t */\r\n\tpublic get linkWith(): string[] {\r\n\t\treturn this.properties.linkWith;\r\n\t}\r\n\r\n\t/**\r\n\t * Should dataItem (node) be hidden in legend?\r\n\t *\r\n\t * @param value Visible in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tthis.setProperty(\"hiddenInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.properties.hiddenInLegend;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether node should start off as collapsed.\r\n\t *\r\n\t * This can be used to specify whether node should start off as collapsed\r\n\t * via data.\r\n\t *\r\n\t * To toggle actual node, use its `isActive` property instead.\r\n\t * \r\n\t * @param  value  Collapsed?\r\n\t */\r\n\tpublic set collapsed(value: boolean) {\r\n\t\tthis.setProperty(\"collapsed\", value);\r\n\t\tthis.node.isActive = !value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Collapsed?\r\n\t */\r\n\tpublic get collapsed(): boolean {\r\n\t\treturn this.properties.collapsed;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of item's sub-children.\r\n\t *\r\n\t * @param children  Item's children\r\n\t */\r\n\tpublic set children(children: OrderedListTemplate<ForceDirectedSeriesDataItem>) {\r\n\t\tthis.setProperty(\"children\", children);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Item's children\r\n\t */\r\n\tpublic get children(): OrderedListTemplate<ForceDirectedSeriesDataItem> {\r\n\t\treturn this.properties.children;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a marker used in the legend for this slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Marker container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tthis.component.createLegendMarker(marker, this);\r\n\t\tif (!this.node.isActive) {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category.\r\n\t */\r\n\tcategory?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's sub-items.\r\n\t */\r\n\tchildren?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's name.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A name of the field tha holds an array of ids that node should link with\r\n\t * besides of it's own children or parent.\r\n\t */\r\n\tlinkWith?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's color.\r\n\t *\r\n\t * If not set, a new color will be automatically assigned to each item as\r\n\t * defined by theme.\r\n\t */\r\n\tcolor?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be\r\n\t * hidden in legend.\r\n\t */\r\n\thiddenInLegend?: string;\r\n\r\n\t/**\r\n\t * A name of the field that holds boolean flag whether node should start\r\n\t * as collapsed. (nodes start as fully expanded by default)\r\n\t */\r\n\tcollapsed?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * Smallest possible radius in pixels of the node circle.\r\n\t * \r\n\t * @default 5\r\n\t */\r\n\tminRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Biggest possible radius in pixels of the node circle.\r\n\t * \r\n\t * @default 70\r\n\t */\r\n\tmaxRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * A color set to be used for coloring nodes.\r\n\t *\r\n\t * Each new top level will be assigned a new color from this list.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Number of levels to display initially.\r\n\t */\r\n\tmaxLevels?: number;\r\n\r\n\t/**\r\n\t * A relative strength with which nodes push or attract each other.\r\n\t */\r\n\tmanyBodyStrength?: number;\r\n\r\n\t/**\r\n\t * A relative strength with which nodes are pushed away or attracted to\r\n\t * center of the chart.\r\n\t */\r\n\tcenterStrength?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesEvents extends ISeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link Adapter}\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesAdapters extends ISeriesAdapters, IForceDirectedSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a [[ForceDirectedTree]] chart.\r\n *\r\n * @see {@link IForceDirectedSeriesEvents} for a list of available Events\r\n * @see {@link IForceDirectedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/ForceDirectedTree/} For more information\r\n * @todo Example\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedSeries extends Series {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _node: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _nodes: ListTemplate<this[\"_node\"]>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _link: ForceDirectedLink;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _links: ListTemplate<this[\"_link\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IForceDirectedSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: ForceDirectedTree;\r\n\r\n\t/**\r\n\t * Parent data item of a series.\r\n\t */\r\n\tpublic parentDataItem: ForceDirectedTreeDataItem;\r\n\r\n\t/**\r\n\t * A reference to the `d3.Simulation` instance for fine-grained configuration\r\n\t * of node gravitational dynamics.\r\n\t *\r\n\t * @see {@link https://github.com/d3/d3-force#simulation} For more info\r\n\t */\r\n\tpublic d3forceSimulation: d3force.Simulation<{}, d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _maxValue: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _forceLinks: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>[];\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _linkForce: d3force.ForceLink<d3force.SimulationNodeDatum, d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _collisionForce: d3force.ForceCollide<d3force.SimulationNodeDatum>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedSeries\";\r\n\r\n\t\tthis.d3forceSimulation = d3force.forceSimulation();\r\n\r\n\t\tthis.maxRadius = percent(8);\r\n\t\tthis.minRadius = percent(1);\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.colors.step = 2;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.manyBodyStrength = -15;\r\n\t\tthis.centerStrength = 0.8;\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\tthis.updateRadiuses(this.dataItems);\r\n\t\t\tthis.updateLinksAndNodes();\r\n\r\n\t\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\r\n\t\t\tif (d3forceSimulation) {\r\n\t\t\t\td3forceSimulation.force(\"x\", d3force.forceX().x(this.innerWidth / 2).strength(this.centerStrength * 100 / this.innerWidth));\r\n\t\t\t\td3forceSimulation.force(\"y\", d3force.forceY().y(this.innerHeight / 2).strength(this.centerStrength * 100 / this.innerHeight));\r\n\t\t\t\tif (d3forceSimulation.alpha() < 0.4) {\r\n\t\t\t\t\td3forceSimulation.alpha(0.4);\r\n\t\t\t\t\td3forceSimulation.restart();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value from all supplied data items.\r\n\t * \r\n\t * @ignore\r\n\t * @param   dataItems  List of data items\r\n\t * @param   max        Default max\r\n\t * @return             Max\r\n\t */\r\n\tprotected getMaxValue(dataItems: OrderedListTemplate<ForceDirectedSeriesDataItem>, max: number): number {\r\n\t\tdataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.value > max) {\r\n\t\t\t\tmax = dataItem.value;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.children) {\r\n\t\t\t\tlet cmax = this.getMaxValue(dataItem.children, max);\r\n\t\t\t\tif (cmax > max) {\r\n\t\t\t\t\tmax = cmax;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\r\n\t\tthis._maxValue = this.getMaxValue(this.dataItems, 0);\r\n\r\n\t\tthis._forceLinks = [];\r\n\r\n\t\tthis.colors.reset();\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tlet radius = Math.min(this.innerHeight / 3, this.innerWidth / 3);\r\n\r\n\t\tif (this.dataItems.length <= 1) {\r\n\t\t\tradius = 0;\r\n\t\t}\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\r\n\t\t\tlet angle = index / this.dataItems.length * 360;\r\n\r\n\t\t\tdataItem.node.x = this.innerWidth / 2 + radius * $math.cos(angle);\r\n\t\t\tdataItem.node.y = this.innerHeight / 2 + radius * $math.sin(angle);\r\n\r\n\t\t\tdataItem.node.fill = dataItem.color;\r\n\t\t\tdataItem.node.stroke = dataItem.color;\r\n\r\n\t\t\tindex++;\r\n\r\n\t\t\tthis.initNode(dataItem);\r\n\t\t})\r\n\r\n\t\tif (this.dataFields.linkWith) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tthis.processLinkWith(dataItem);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / 600));\r\n\r\n\t\td3forceSimulation.on(\"tick\", () => {\r\n\t\t\tthis.updateLinksAndNodes();\r\n\t\t});\r\n\r\n\t\tthis.chart.feedLegend();\r\n\r\n\t\tsuper.validateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic updateNodeList() {\r\n\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\t\td3forceSimulation.nodes(this.nodes.values);\r\n\t\tthis._linkForce = d3force.forceLink(this._forceLinks);\r\n\t\td3forceSimulation.force(\"link\", this._linkForce);\r\n\t\tthis._collisionForce = d3force.forceCollide();\r\n\t\td3forceSimulation.force(\"collision\", this._collisionForce);\r\n\r\n\t\td3forceSimulation.force(\"x\", d3force.forceX().x(this.innerWidth / 2).strength(this.centerStrength * 100 / this.innerWidth));\r\n\t\td3forceSimulation.force(\"y\", d3force.forceY().y(this.innerHeight / 2).strength(this.centerStrength * 100 / this.innerHeight));\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic updateLinksAndNodes() {\r\n\t\tif (this._linkForce) {\r\n\t\t\tthis._linkForce.distance((linkDatum) => { return this.getDistance(linkDatum) });\r\n\t\t\tthis._linkForce.strength((linkDatum) => { return this.getStrength(linkDatum) });\r\n\t\t}\r\n\r\n\t\tif (this._collisionForce) {\r\n\t\t\tthis._collisionForce.radius(function(node) {\r\n\t\t\t\tif (node instanceof ForceDirectedNode) {\r\n\t\t\t\t\tlet radius = node.circle.pixelRadius;\r\n\t\t\t\t\tif(!node.outerCircle.__disabled && !node.outerCircle.disabled && node.outerCircle.visible){\r\n\t\t\t\t\t\tradius = (radius + 3) * node.outerCircle.scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn radius;\t\t\t\t\t \t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.d3forceSimulation.force(\"manybody\", d3force.forceManyBody().strength((node) => {\r\n\t\t\tif (node instanceof ForceDirectedNode) {\r\n\t\t\t\treturn node.circle.pixelRadius * this.manyBodyStrength;\r\n\t\t\t}\r\n\t\t\treturn this.manyBodyStrength;\r\n\t\t}));\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected getDistance(linkDatum: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>) {\r\n\r\n\t\tlet source: ForceDirectedNode = <ForceDirectedNode>linkDatum.source;\r\n\t\tlet target: ForceDirectedNode = <ForceDirectedNode>linkDatum.target;\r\n\r\n\t\tlet distance = 0;\r\n\t\tif (target.dataItem && source.dataItem) {\r\n\t\t\tif (target.dataItem.parentLink) {\r\n\t\t\t\tdistance = target.dataItem.parentLink.distance;\r\n\t\t\t}\r\n\t\t\tif (!source.isActive) {\r\n\t\t\t\tdistance = 1;\r\n\t\t\t}\r\n\t\t\treturn (distance * (source.circle.pixelRadius + target.circle.pixelRadius));\r\n\t\t}\r\n\r\n\t\treturn distance;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected getStrength(linkDatum: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>) {\r\n\r\n\t\tlet target: ForceDirectedNode = <ForceDirectedNode>linkDatum.target;\r\n\r\n\t\tlet strength = 0;\r\n\t\tif (target.dataItem && target.dataItem.parentLink) {\r\n\t\t\tstrength = target.dataItem.parentLink.strength;\r\n\t\t}\r\n\r\n\t\treturn strength;\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for drag end event.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic nodeDragEnded(): void {\r\n\t\tthis.d3forceSimulation.alphaTarget(0);\r\n\t}\r\n\t/**\r\n\t * Handler for drag start event.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic nodeDragStarted(): void {\r\n\t\tthis.d3forceSimulation.alpha(0.1);\r\n\t\tthis.d3forceSimulation.restart();\r\n\t}\r\n\r\n\t/**\r\n\t * Resets positions of whole tree.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic restartSimulation(): void {\r\n\t\tif (this.d3forceSimulation.alpha() <= 0.3) {\r\n\t\t\tthis.d3forceSimulation.alpha(0.3);\r\n\t\t\tthis.d3forceSimulation.restart();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateRadiuses(dataItems:OrderedListTemplate<ForceDirectedSeriesDataItem>){\r\n\t\tdataItems.each((dataItem)=>{\r\n\t\t\tthis.updateRadius(dataItem);\r\n\t\t\tif(dataItem.childrenInited){\r\n\t\t\t\tthis.updateRadiuses(dataItem.children);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateRadius(dataItem:ForceDirectedSeriesDataItem){\r\n\t\tlet node = dataItem.node;\r\n\t\tlet minSide = (this.innerWidth + this.innerHeight) / 2;\r\n\t\tlet minRadius = $utils.relativeToValue(this.minRadius, minSide)\r\n\t\tlet maxRadius = $utils.relativeToValue(this.maxRadius, minSide)\r\n\r\n\t\tlet radius = minRadius + dataItem.value / this._maxValue * (maxRadius - minRadius);\r\n\r\n\t\tif (!$type.isNumber(radius)) {\r\n\t\t\tradius = minRadius;\r\n\t\t}\r\n\r\n\t\tif(!node.circle.isHidden){\r\n\t\t\tnode.circle.radius = radius;\r\n\t\t}\r\n\r\n\t\tnode.outerCircle.radius = radius + 3;\r\n\r\n\t\tnode.circle.states.getKey(\"active\").properties.radius = radius;\r\n\t\tnode.circle.defaultState.properties.radius = radius;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes node.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic initNode(dataItem: ForceDirectedSeriesDataItem): void {\r\n\r\n\t\tlet node = dataItem.node;\r\n\t\tnode.parent = this;\r\n\t\tthis.updateRadius(dataItem);\r\n\r\n\t\tlet nodeIndex = this.nodes.indexOf(dataItem.node);\r\n\r\n\t\tif (!dataItem.children || dataItem.children.length == 0) {\r\n\t\t\tnode.outerCircle.__disabled = true;\r\n\t\t\tnode.circle.interactionsEnabled = true;\r\n\t\t\tnode.cursorOverStyle = MouseCursorStyle.default;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnode.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\t}\r\n\r\n\t\tif (this.dataItemsInvalid && (dataItem.level >= this.maxLevels - 1 || dataItem.collapsed)) {\r\n\t\t\tnode.isActive = false;\r\n\t\t\tthis.updateNodeList();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (dataItem.children) {\r\n\t\t\tlet index = 0;\r\n\t\t\tdataItem.childrenInited = true;\r\n\r\n\t\t\tif (this.dataItems.length == 1 && dataItem.level == 0) {\r\n\t\t\t\tthis.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tdataItem.children.each((child) => {\r\n\t\t\t\tlet link = this.links.create();\r\n\t\t\t\tlink.parent = this;\r\n\t\t\t\tlink.zIndex = -1;\r\n\t\t\t\tdataItem.childLinks.push(link);\r\n\t\t\t\tlink.source = dataItem.node;\r\n\t\t\t\tlet childIndex = this.nodes.indexOf(child.node);\r\n\t\t\t\tlink.target = child.node;\r\n\t\t\t\tchild.parentLink = link;\r\n\r\n\t\t\t\tthis._forceLinks.push({ source: nodeIndex, target: childIndex });\r\n\r\n\t\t\t\tlet radius = 2 * node.circle.pixelRadius + child.node.circle.pixelRadius;\r\n\r\n\t\t\t\tlet angle = index / dataItem.children.length * 360;\r\n\r\n\t\t\t\tchild.node.x = node.pixelX + radius * $math.cos(angle);\r\n\t\t\t\tchild.node.y = node.pixelY + radius * $math.sin(angle);\r\n\r\n\t\t\t\tchild.node.circle.radius = 0;\r\n\r\n\t\t\t\tlet color: Color | LinearGradient | RadialGradient | Pattern;\r\n\r\n\t\t\t\tlet diColor = child.properties.color;\r\n\t\t\t\tif ($type.hasValue(diColor)) {\r\n\t\t\t\t\tcolor = diColor;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.dataItems.length == 1 && dataItem.level == 0) {\r\n\t\t\t\t\t\tcolor = this.colors.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcolor = dataItem.color;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchild.color = color;\r\n\t\t\t\tchild.node.fill = color;\r\n\t\t\t\tchild.node.stroke = color;\r\n\t\t\t\tchild.parentLink.stroke = color;\r\n\r\n\t\t\t\tthis.initNode(child);\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tnode.isActive = true;\r\n\t\tthis.updateNodeList();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected processLinkWith(dataItem: ForceDirectedSeriesDataItem) {\r\n\r\n\t\tif (dataItem.linkWith) {\r\n\t\t\t$array.each(dataItem.linkWith, (id, index) => {\r\n\t\t\t\tlet dataItemToConnect = this.getDataItemById(this.dataItems, id);\r\n\r\n\t\t\t\tif (dataItemToConnect) {\r\n\t\t\t\t\tlet link = this.links.create();\r\n\t\t\t\t\tlink.parent = this;\r\n\t\t\t\t\tlink.zIndex = -1;\r\n\t\t\t\t\tlink.source = dataItem.node;\r\n\t\t\t\t\tlink.target = dataItemToConnect.node;\r\n\t\t\t\t\tlink.stroke = dataItem.node.fill;\r\n\t\t\t\t\tdataItem.childLinks.push(link);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (dataItem.children) {\r\n\t\t\tdataItem.children.each((child) => {\r\n\t\t\t\tthis.processLinkWith(child);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[ForceDirectedSeriesDataItem]] related to node by specific id.\r\n\t *\r\n\t * @ignore\r\n\t * @param   dataItems  List of data items to search in\r\n\t * @param   id         Id to search for\r\n\t * @return             Data item\r\n\t */\r\n\tpublic getDataItemById(dataItems: OrderedListTemplate<ForceDirectedSeriesDataItem>, id: string): ForceDirectedSeriesDataItem {\r\n\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\tif (dataItem.id == id) {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t\tif (dataItem.children) {\r\n\t\t\t\tlet di = this.getDataItemById(dataItem.children, id);\r\n\t\t\t\tif (di) {\r\n\t\t\t\t\treturn di;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ForceDirectedSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of nodes in series.\r\n\t * \r\n\t * @return  Node list\r\n\t */\r\n\tpublic get nodes(): ListTemplate<this[\"_node\"]> {\r\n\t\tif (!this._nodes) {\r\n\t\t\tlet node = this.createNode();\r\n\r\n\t\t\tnode.applyOnClones = true;\r\n\t\t\tthis._disposers.push(node);\r\n\r\n\t\t\tthis._nodes = new ListTemplate(node);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._nodes));\r\n\t\t}\r\n\t\treturn this._nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of links between nodes.\r\n\t * \r\n\t * @return  Link list\r\n\t */\r\n\tpublic get links(): ListTemplate<this[\"_link\"]> {\r\n\t\tif (!this._links) {\r\n\t\t\tlet link = this.createLink();\r\n\t\t\tlink.applyOnClones = true;\r\n\t\t\tthis._disposers.push(link);\r\n\r\n\t\t\tthis._links = new ListTemplate(link);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._links));\r\n\t\t}\r\n\t\treturn this._links;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new node.\r\n\t */\r\n\tprotected createNode(): this[\"_node\"] {\r\n\t\treturn new ForceDirectedNode();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new link.\r\n\t */\r\n\tprotected createLink(): this[\"_link\"] {\r\n\t\treturn new ForceDirectedLink();\r\n\t}\r\n\r\n\t/**\r\n\t * Smallest possible radius in pixels of the node circle.\r\n\t * \r\n\t * If set in percent, it radius will be calculated from average width and\r\n\t * height of series.\r\n\t * \r\n\t * @default Percent(1)\r\n\t * @param  value  Minimum radius (px or percent)\r\n\t */\r\n\tpublic set minRadius(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"minRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Minimum radius (px or percent)\r\n\t */\r\n\tpublic get minRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"minRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Biggest possible radius in pixels of the node circle.\r\n\t * \r\n\t * If set in percent, it radius will be calculated from average width and\r\n\t * height of series.\r\n\t *\r\n\t * @default Percent(8)\r\n\t * @param  value  Maximum radius (px or Percent)\r\n\t */\r\n\tpublic set maxRadius(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"maxRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum radius (px or Percent)\r\n\t */\r\n\tpublic get maxRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"maxRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for nodes.\r\n\t *\r\n\t * iIt works like this:\r\n\t * \r\n\t * The first level with more than one node, assigns different colors to all\r\n\t * nodes in this list. Their child nodes inherit the color.\r\n\t *\r\n\t * For example, if the top level has one node with three children, the top\r\n\t * node will get first color, the first child will get second color, etc.\r\n\t *\r\n\t * If there are two top nodes, the first top node gets first color, the\r\n\t * second top node gets the second color. Their subsequent children inherit\r\n\t * colors.\r\n\t *\r\n\t * @param value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of levels to be displayed initially.\r\n\t * \r\n\t * @param  value  Number of levels\r\n\t */\r\n\tpublic set maxLevels(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLevels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number of levels\r\n\t */\r\n\tpublic get maxLevels(): number {\r\n\t\treturn this.getPropertyValue(\"maxLevels\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative strength each node pushes (or attracts) other nodes (it is\r\n\t * multiplied by `node.circle.radius` for big nodes to push stronger).\r\n\t * \r\n\t * Positive value will make nodes attract each other, while negative will\r\n\t * push away each other. The bigger the negative number is, the more \r\n\t * scattered nodes will be.\r\n\t *\r\n\t * Available value range: `-XX` to `XX`.\r\n\t * \r\n\t * @default -15\r\n\t * @param  value  Body push/attrack strength\r\n\t */\r\n\tpublic set manyBodyStrength(value: number) {\r\n\t\tif (this.setPropertyValue(\"manyBodyStrength\", value)) {\r\n\t\t\tthis.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Body push/attrack strength\r\n\t */\r\n\tpublic get manyBodyStrength(): number {\r\n\t\treturn this.getPropertyValue(\"manyBodyStrength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative strength each child node is pushes (or attracted) to the center\r\n\t * of the chart.\r\n\t * \r\n\t * Positive value will make nodes to be attracted to center, while negative\r\n\t * will push them away.\r\n\t *\r\n\t * Available value range: `-50` to `50`.\r\n\t * \r\n\t * @default 0.8\r\n\t * @param  value  Stregth of attraction to center\r\n\t */\r\n\tpublic set centerStrength(value: number) {\r\n\t\tif (this.setPropertyValue(\"centerStrength\", value)) {\r\n\t\t\tthis.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Stregth of attraction to center\r\n\t */\r\n\tpublic get centerStrength(): number {\r\n\t\treturn this.getPropertyValue(\"centerStrength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker    Container\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic createLegendMarker(marker: Container, dataItem?: this[\"_dataItem\"]): void {\r\n\t\tmarker.children.each((child) => {\r\n\t\t\tlet node = dataItem.node;\r\n\r\n\t\t\tif (child instanceof RoundedRectangle) {\r\n\t\t\t\tchild.cornerRadius(40, 40, 40, 40);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tchild.defaultState.properties.fill = node.fill;\r\n\t\t\tchild.defaultState.properties.stroke = node.stroke;\r\n\t\t\tchild.defaultState.properties.fillOpacity = node.fillOpacity;\r\n\t\t\tchild.defaultState.properties.strokeOpacity = node.strokeOpacity;\r\n\r\n\t\t\tchild.fill = node.fill;\r\n\t\t\tchild.stroke = node.stroke;\r\n\t\t\tchild.fillOpacity = node.fillOpacity;\r\n\t\t\tchild.strokeOpacity = node.strokeOpacity;\r\n\r\n\t\t\tif (child.fill == undefined) {\r\n\t\t\t\tchild.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\t\tlegendDataItem.color = node.fill;\r\n\t\t\tlegendDataItem.colorOrig = node.fill;\r\n\r\n\t\t\tnode.events.on(\"propertychanged\", (ev) => {\r\n\t\t\t\tif (ev.property == \"fill\") {\r\n\r\n\t\t\t\t\tchild.__disabled = false;\r\n\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.fill = node.fill;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.fill = node.fill;\r\n\t\t\t\t\tlegendDataItem.color = node.fill;\r\n\t\t\t\t\tlegendDataItem.colorOrig = node.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ev.property == \"stroke\") {\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.stroke = node.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.stroke = node.stroke;\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false)\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedSeries\"] = ForceDirectedSeries;\r\nregistry.registeredClasses[\"ForceDirectedSeriesDataItem\"] = ForceDirectedSeriesDataItem;\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedSeries.ts","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/manyBody.js\n// module id = null\n// module chunks = ","/**\r\n * ForceDirectedTree chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { ForceDirectedSeries, ForceDirectedSeriesDataItem } from \"./ForceDirectedSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link DataItem}\r\n */\r\nexport class ForceDirectedTreeDataItem extends SerialChartDataItem { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeProperties extends ISerialChartProperties { }\r\n\r\n/**\r\n * Defines events for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedTreeAdapters extends ISerialChartAdapters, IForceDirectedTreeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A main class for [[ForceDirectedTree]] chart type.\r\n *\r\n * @see {@link IForceDirectedTreeEvents} for a list of available Events\r\n * @see {@link IForceDirectedTreeAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/} For more information\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedTree extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedTreeDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IForceDirectedTreeDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedTreeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedTreeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedTreeEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedTree\";\r\n\r\n\t\tthis.seriesContainer.isMeasured = true;\r\n\t\tthis.seriesContainer.layout = \"absolute\";\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new series of the suitable type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new ForceDirectedSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ForceDirectedTreeDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\r\n\t\t\t\t\tlet dataItems = series.dataItems;\r\n\t\t\t\t\tif (dataItems.length == 1) {\r\n\t\t\t\t\t\tlet children = series.dataItems.getIndex(0).children;\r\n\t\t\t\t\t\tif (children.length > 0) {\r\n\t\t\t\t\t\t\tdataItems = children;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItems.each((dataItem) => {\r\n\t\t\t\t\t\tif (!dataItem.hiddenInLegend) {\r\n\t\t\t\t\t\t\tlegendData.push(<ForceDirectedSeriesDataItem>dataItem);\r\n\r\n\t\t\t\t\t\t\tlet legendSettings = series.legendSettings;\r\n\t\t\t\t\t\t\tif (legendSettings) {\r\n\t\t\t\t\t\t\t\tif (legendSettings.labelText) {\r\n\t\t\t\t\t\t\t\t\tlegend.labels.template.text = legendSettings.labelText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\t\t\t\tlegend.labels.template.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.valueText) {\r\n\t\t\t\t\t\t\t\t\tlegend.valueLabels.template.text = legendSettings.valueText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\t\t\t\tlegend.valueLabels.template.text = legendSettings.itemValueText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Force directed tree\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedTree\"] = ForceDirectedTree;\r\nregistry.registeredClasses[\"ForceDirectedTreeDataItem\"] = ForceDirectedTreeDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedTree.ts","import * as m from \"../../es2015/plugins/forceDirected\";\nwindow.am4plugins_forceDirected = m;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/forceDirected.js\n// module id = null\n// module chunks = "],"sourceRoot":""}